<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="9" hostname="DESKTOP-3KOP925" failures="0" tests="10" name="POMFramework" time="26.55" errors="0" timestamp="2023-12-23T00:36:14 IST">
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="-1.703271964971E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.testpages.RegisterPageTest" name="@BeforeMethod openApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod openApplication -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="-1.703271971949E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="-1.703271973139E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="-1.703271974547E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated generateTestStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.base.Base" name="@AfterMethod generateTestStatus" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod generateTestStatus -->
  <testcase classname="medicare.testpages.RegisterPageTest" name="RegisterUser" time="1.211"/>
  <testcase classname="medicare.testpages.RegisterPageTest" name="RegisterUser" time="0.0">
    <skipped/>
  </testcase> <!-- RegisterUser -->
  <testcase classname="medicare.testpages.LoginPageTest" name="test_login" time="0.734"/>
  <testcase classname="medicare.testpages.AddProductToCartTest" name="test_login" time="1.167"/>
  <testcase classname="medicare.testpages.AddProductToCartTest" name="ViewProducts" time="0.001">
    <skipped/>
  </testcase> <!-- ViewProducts -->
  <testcase classname="medicare.testpages.AddProductToCartTest" name="test_add_product_to_cart" time="0.001">
    <skipped/>
  </testcase> <!-- test_add_product_to_cart -->
  <testcase classname="medicare.testpages.AddProductToCartTest" name="cart" time="0.001">
    <skipped/>
  </testcase> <!-- cart -->
  <testcase classname="medicare.testpages.PlaceOrderPageTest" name="test_login" time="1.282"/>
  <testcase classname="medicare.testpages.PlaceOrderPageTest" name="cart" time="0.0">
    <skipped/>
  </testcase> <!-- cart -->
  <testcase classname="medicare.testpages.PlaceOrderPageTest" name="PlaceOrder" time="0.002">
    <skipped/>
  </testcase> <!-- PlaceOrder -->
  <testcase classname="medicare.base.Base" name="@BeforeSuite InitalizeExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite InitalizeExtentReport -->
  <testcase classname="medicare.base.Base" name="@BeforeTest getnameMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest getnameMethod -->
  <testcase classname="medicare.base.Base" name="@AfterSuite generateReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReports -->
  <testcase classname="medicare.base.Base" name="@BeforeSuite InitalizeExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite InitalizeExtentReport -->
  <testcase classname="medicare.base.Base" name="@BeforeTest getnameMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest getnameMethod -->
  <testcase classname="medicare.base.Base" name="@BeforeTest getnameMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest getnameMethod -->
  <testcase classname="medicare.base.Base" name="@AfterSuite generateReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReports -->
  <testcase classname="medicare.base.Base" name="@AfterSuite generateReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReports -->
  <testcase classname="medicare.base.Base" name="@BeforeSuite InitalizeExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite InitalizeExtentReport -->
</testsuite> <!-- POMFramework -->
